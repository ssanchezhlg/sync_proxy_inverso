El módulo synchronize de Ansible, que se basa en el comando rsync, tiene una variedad de parámetros que puedes utilizar para personalizar el comportamiento de la sincronización. Aquí tienes algunos de los parámetros más comunes:

    src: La ruta del directorio o archivo de origen que se va a sincronizar.
    dest: La ruta del directorio de destino donde se va a sincronizar el contenido.
    delete: Si se establece en yes, los archivos que existen en el destino pero no en el origen se eliminarán.
    recursive: Si se establece en yes, la sincronización se realizará de manera recursiva, incluyendo subdirectorios.
    checksum: Si se establece en yes, se utilizará el checksum de los archivos para determinar si es necesario copiarlos o no.
    archive: Si se establece en yes, se preservarán los permisos, enlaces simbólicos, propietario y grupo de los archivos durante la copia.
    compress: Si se establece en yes, los datos se comprimirán durante la transferencia.
    owner: Si se establece en yes, se preservará el propietario de los archivos.
    group: Si se establece en yes, se preservará el grupo de los archivos.
    perms: Si se establece en yes, se preservarán los permisos de los archivos.
    times: Si se establece en yes, se preservarán las marcas de tiempo de los archivos.
    links: Si se establece en yes, los enlaces simbólicos serán copiados en lugar de ser seguidos.
    copy_links: Si se establece en yes, los enlaces simbólicos serán copiados como archivos.
    rsync_path: La ruta al comando rsync en el servidor remoto.
    rsync_opts: Una lista de opciones adicionales que se pasarán al comando rsync.

Estos son solo algunos de los parámetros disponibles. Puedes consultar la documentación de Ansible para obtener más información sobre cada uno de ellos y cómo utilizarlos en tu playbook.



En el caso del palybook se le pone en host all, pues por el inventory es donde se especificara el servidor a donde se accedera



Desplegarla con Ansible Semaphore

1. Agregamos el Environment

en nombre le pondremos: none

en las variables: {}

2. Agregamos el Repositories

le agregamos el nombre: sync_proxy_inverso

le agregamos la Url: https://github.local.softnet.cu/ssanchezhlg/sync_proxy_inverso.git

le agregamos la rama: main

y el acceso: este acceso ya debe de estar agregado.


3. Creamos el inventario

le agregamos el nombre: Server_Local_Docker

user credenciales: Escogemos ya la creada

Sudo credenciales lo dejamos en blanco

En type escogemos: static

y abajo agregamos

[Server_Local_Docker]
10.10.10.110 ansible_ssh_common_args='-o StrictHostKeyChecking=no'


4. Creamos Task Templates 

le agregamos el nombre: 05 - sync_proxy_inverso

playbook filename: (este playbook lo escogermos en el repositorio, el cual es el que sera monitoreado por el sistema) actualizar_ngnix-necesita-rsync_2.yml

Inventory: Escogemos el inventario agregado para esta tarea

Repository: Escogemos el repository agregado agregado para esta tarea

Environment: Escogemos None






Ahora vamos a semaphore y creamos una tarea y la hacemos correr: